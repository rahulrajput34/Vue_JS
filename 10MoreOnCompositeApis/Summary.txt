// In this lecuture we want to create the  textarea and want to give the event when the we press the tab it will give the four space over there

// So for that we write the basic and the first basic code is looks like below
// This is the first simple code with commets


// **********************************  1st update  *******************************************

<script setup>
// TODO: Functinality for if the tag is pressed give four space

import { onMounted, ref } from 'vue';
// TODO: This is how we can access eny element from the componenet
// Just pass this varibale name inside that component
let textarea = ref(null);  // helps to just get the reference of that elemenet
// console.log(textarea);


// The mounted is helpful to get the html of the given ref
onMounted(() => {
  //To get the value inside the give elemenet, we must give value.value because we want value inside the text area
  // console.log(textarea.value.value);

// We must give textarea.value to access the elemenet
textarea.value.addEventListener('keydown', (e) => {
  let t = textarea.value;
  // This code is of tab key
  if(e.key === 'Tab') {
  
    // this is how we do it get the first and end 
    let val = t.value,
    start = t.selectionStart,
    end = t.selectionEnd
    
    // set t value to: text before caret + tag + text after caret
    t.value = val.substring(0, start) + '\t' + val.substring(end);

    // put caret at right position again
    t.selectionStart = t.selectionEnd = start + 1;

    e.preventDefault(); 
  }
})
})
</script>

<template>
  <main>
    <textarea ref="textarea" style="width: 100%; height: 300px;">Hi There!</textarea>
  </main>
</template>


// Then we start to optimize the code
// For that we remove the manual EventListener and give the event in template and give the function in it, also delcare that function if someone clicks then this function executes and works fine


// **********************************   Second updated form ********************************

<script setup>
import { onMounted, ref } from 'vue';
let textarea = ref(null);  

function onKeydown(e){
  let t = textarea.value;
  if(e.key === 'Tab') {
    let val = t.value,
    start = t.selectionStart,
    end = t.selectionEnd

    t.value = val.substring(0, start) + '\t' + val.substring(end);
    t.selectionStart = t.selectionEnd = start + 1;

    e.preventDefault(); 
  }
}
</script>

<template>
  <main>
    <textarea ref="textarea" @keydown="onKeydown" style="width: 100%; height: 300px;">Hi There!</textarea>
  </main>
</template>



// Then we passed the tag and prevent default inside the elemenet
// **********************************   Third update *************************************************
<script setup>
import { onMounted, ref } from 'vue';
let textarea = ref(null);  

function onTabPressed(e){
  let t = textarea.value;
    let val = t.value,
    start = t.selectionStart,
    end = t.selectionEnd

    t.value = val.substring(0, start) + '\t' + val.substring(end);
    t.selectionStart = t.selectionEnd = start + 1;
}
</script>
<template>
  <main>
    <textarea ref="textarea" @keydown.tab.prevent="onTabPressed" style="width: 100%; height: 300px;">Hi There!</textarea>
  </main>
</template>


// Then we do not need the ref as well we can do it same by just target that element
// **************************************   Fourth update  *****************************************
<script setup>
function onTabPressed(e){
  // we can also get it from the target, we do not need to pass the ref as well
  let textArea = e.target;
    let val = textArea.value,
    start = textArea.selectionStart,
    end = textArea.selectionEnd

    textArea.value = val.substring(0, start) + '\t' + val.substring(end);
    textArea.selectionStart = textArea.selectionEnd = start + 1;
}
</script>
<template>
  <main>
    <textarea @keydown.tab.prevent="onTabPressed" style="width: 100%; height: 300px;">Hi There!</textarea>
  </main>
</template>


// We also need this table area to use it elsewhere as well so that we put it inside the composables and then pass it over here inside the home

// *************************************  Fifth update ******************************************
// Home
<script setup>
import TabbableTextArea from '@/composables/TabbableTextArea.vue';
</script>
<template>
  <main>
    <form>
      <TabbableTextArea style="width: 100%; height: 300px;"/>
    </form>
  </main>
</template>

// we give inside the remove the style and default text from here
// Composable --> TabbableTextArea.vue

<script setup>
function onTabPressed(e){
  // we can also get it from the target, we do not need to pass the ref as well
  let textArea = e.target;
    let val = textArea.value,
    start = textArea.selectionStart,
    end = textArea.selectionEnd

    textArea.value = val.substring(0, start) + '\t' + val.substring(end);
    textArea.selectionStart = textArea.selectionEnd = start + 1;
}
</script>

<template>
    <textarea @keydown.tab.prevent="onTabPressed"></textarea>
</template>


// Then we link all the text area we give by passing the props and the event emits and v-model


